#ifndef SSGUI_TAB_HPP
#define SSGUI_TAB_HPP

#include "ssGUI/Enums/Direction.hpp"
#include "ssGUI/GUIObjectClasses/CompositeClasses/StandardButton.hpp"

//namespace: ssGUI
namespace ssGUI
{
    /* clang-format off */
    /*class: Tab
    A tab GUI object that is normally generated by <ssGUI::Extensions::TabArea>
    
    Variables & Constructor:
    ============================== C++ ==============================
    protected:
        //See <GetTabColor>
        glm::u8vec4 TabColor;
        
        //See <GetSelectedColor>
        glm::u8vec4 SelectedColor;
        
        //See <GetUnderlineColor>
        glm::u8vec4 UnderlineColor;

        //See <GetUnderlineThickness>
        float UnderlineThickness;
        
        //See <GetUnderlineDirection>
        ssGUI::Enums::Direction UnderlineDirection;
        
        //See <GetCloseButton>
        ssGUIObjectIndex CloseButton;
        
        //(Internal variable) Shape Ids for the close button
        int CloseButtonShapeIds[2];

        //See <GetAssociatedContent>
        ssGUIObjectIndex ContentObject;
        
        //See <IsTabSelected>
        bool Selected = false;
    
        //(Internal variable) Default size for close button
        static glm::vec2 DefaultCloseButtonSize;
    =================================================================
    ============================== C++ ==============================
    Tab::Tab() :
        StandardButton(),
        TabColor(100, 100, 100, 255),
        SelectedColor(127, 127, 127, 255),
        UnderlineColor(255, 255, 255, 127),
        UnderlineThickness(3),
        UnderlineDirection(ssGUI::Enums::Direction::BOTTOM),
        CloseButton(-1),
        CloseButtonShapeIds{-1, -1},
        ContentObject(-1),
        Selected(false)
    {
        GetExtension<ssGUI::Extensions::Layout>()->ClearAllPreferredSizeMultiplier();
        RemoveExtension<ssGUI::Extensions::RoundedCorners>();
        RemoveExtension<ssGUI::Extensions::Outline>();
        auto* boxShadow = GetExtension<ssGUI::Extensions::BoxShadow>();
        boxShadow->SetSizeOffset(glm::vec2(boxShadow->GetSizeOffset().x, 0));

        GetButtonTextObject()->SetNewTextFontSize(14);

        InitializeCloseButton();
    }
    =================================================================
    */
    /* clang-format on */
    class Tab : public StandardButton
    {
        private:
            Tab& operator=(const Tab& other) = default;

        protected:
            //See <GetTabColor>
            glm::u8vec4 TabColor;

            //See <GetSelectedColor>
            glm::u8vec4 SelectedColor;

            //See <GetUnderlineColor>
            glm::u8vec4 UnderlineColor;

            //See <GetUnderlineThickness>
            float UnderlineThickness;

            //See <GetUnderlineDirection>
            ssGUI::Enums::Direction UnderlineDirection;

            //See <GetCloseButton>
            ssGUIObjectIndex CloseButton;

            //(Internal variable) Shape Ids for the close button
            int CloseButtonShapeIds[2];

            //See <GetAssociatedContent>
            ssGUIObjectIndex ContentObject;

            //See <IsTabSelected>
            bool Selected = false;

            //(Internal variable) Default size for close button
            static glm::vec2 DefaultCloseButtonSize;

            Tab(const Tab& other);

            virtual void SetCloseSymbolColor(glm::u8vec4 color);

            virtual void InitializeCloseButton();

            virtual void MainLogic(ssGUI::Backend::SystemInputInterface* inputInterface,
                                   ssGUI::InputStatus& currentInputStatus,
                                   ssGUI::InputStatus& lastInputStatus,
                                   ssGUI::GUIObject* mainWindow) override;

        public:
            //====================================================================
            //Group: Constants
            //====================================================================

            //string: ListenerKey
            static const std::string ListenerKey;

            Tab();
            virtual ~Tab() override;

            //====================================================================
            //Group: Methods
            //====================================================================
            //function: SetAssociatedContent
            virtual void SetAssociatedContent(ssGUI::GUIObject* content);

            //function: GetAssociatedContent
            virtual ssGUI::GUIObject* GetAssociatedContent() const;

            //function: SetTabColor
            virtual void SetTabColor(glm::u8vec4 color);

            //function: GetTabColor
            virtual glm::u8vec4 GetTabColor() const;

            //function: SetSelectedColor
            virtual void SetSelectedColor(glm::u8vec4 color);

            //function: GetSelectedColor
            virtual glm::u8vec4 GetSelectedColor() const;

            //function: SetUnderlineColor
            virtual void SetUnderlineColor(glm::u8vec4 color);

            //function: GetUnderlineColor
            virtual glm::u8vec4 GetUnderlineColor() const;

            //function: SetUnderlineDirection
            virtual void SetUnderlineDirection(ssGUI::Enums::Direction direction);

            //function: GetUnderlineDirection
            virtual ssGUI::Enums::Direction GetUnderlineDirection() const;

            //function: SetUnderlineThickness
            virtual void SetUnderlineThickness(float thickness);

            //function: GetUnderlineThickness
            virtual float GetUnderlineThickness() const;

            //function: SetCloseButton
            virtual void SetCloseButton(ssGUI::Button* button);

            //function: GetCloseButton
            virtual ssGUI::Button* GetCloseButton() const;

            //function: SelectTab
            virtual void SelectTab(bool select);

            //function: IsTabSelected
            virtual bool IsTabSelected() const;

            //function: SetTabIcon
            virtual void SetTabIcon(ssGUI::Image* icon);

            //function: GetTabIcon
            virtual ssGUI::Image* GetTabIcon() const;

            //function: SetTabTitleObject
            virtual void SetTabTitleObject(ssGUI::Text* title);

            //function: GetTabTitleObject
            virtual ssGUI::Text* GetTabTitleObject() const;

            //====================================================================
            //Group: Overrides
            //====================================================================

            //function: GetType
            //See <Widget::GetType>
            virtual ssGUI::Enums::GUIObjectType GetType() const override;

            //function: Clone
            //See <Widget::Clone>
            virtual Tab* Clone(bool cloneChildren) override;
    };
}

#endif