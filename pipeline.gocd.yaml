format_version: 10
pipelines:
  ssGUI_Pipeline:
    snippets:
      ShellRun: &ShellRun
        configuration:
          id: script-executor
          version: "1"
      NotifyPipelineStatus: &NotifyPipelineStatus
        <<: *ShellRun
        options:
          script: |+
            set -e
            source ~/helpers.sh
            if [ ! -e ./ci.log ]; then
              touch ./ci.log
            fi

            if [ ! -z "$PR_ID" ]; then
              ~/Trigger_GH_PR_StatusPipeline.sh \
              --status "failed" \
              --commit "$(cat ./.commit-id)" \
              --repo "ssGUI" \
              --pr "$PR_ID" \
              --stage "$GO_STAGE_NAME" \
              --message "$(cat ./ci.log)"
            fi
    
    group: ssGUI
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      USER_ORIGIN: "Neko-Box-Coder"
      BRANCH: "v0.94.03"
      CI_API_TOKEN: "{{SECRET:[SECRET_CONFIG][CI_API_KEY]}}"
      PR_ID: ""
    materials:
      DummyMaterial:
        git: https://github.com/Neko-Box-Coder/ssGUI.git
        branch: main
        shallow_clone: true
        auto_update: false
        destination: ""
    stages:
    - CheckoutStage:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: true
        approval:
          type: success
          allow_only_on_success: true
        jobs:
          CheckoutJob:
            artifacts:
            - build:
                source: ssGUI/*
                destination: ssGUI
            tasks:
            
            # Fetching/Creating cache
            - plugin:
                <<: *ShellRun
                run_if: passed
                options:
                  shtype: bash
                  script: |+
                    set -e
                    source ~/helpers.sh
                    (
                      echo Fetching/Creating cache...
                    )
            - exec:
                run_if: passed
                command: sh
                arguments:
                - -c
                - mkdir -p ~/.gitcache
            
            - plugin:
                <<: *ShellRun
                run_if: passed
                options:
                  shtype: bash
                  script: |+
                    set -e
                    source ~/helpers.sh
                    cd ~/.gitcache
                    if [[ ! -d ~/.gitcache/ssGUI ]]; then
                      git clone --verbose --recursive "https://github.com/neko-box-coder/ssGUI.git"
                    fi
                    cd ./ssGUI && git pull --verbose --no-edit --ff-only origin $(git branch --show-current)
            
            # Clone Branch
            - plugin:
                <<: *ShellRun
                run_if: passed
                options:
                  shtype: bash
                  script: |+
                    set -e
                    source ~/helpers.sh
                    (
                      echo Checking out branch "$BRANCH" at user "$USER_ORIGIN"
                    )
            
            - plugin:
                <<: *ShellRun
                run_if: passed
                options:
                  shtype: bash
                  script: |+
                    set -e
                    source ~/helpers.sh
                    (
                      git clone --verbose --reference-if-able ~/.gitcache/ssGUI --recursive -b \
                      "$BRANCH" "https://github.com/$USER_ORIGIN/ssGUI.git"
                    )
            
            - plugin:
                <<: *ShellRun
                run_if: passed
                options:
                  shtype: bash
                  script: |+
                    set -e
                    source ~/helpers.sh
                    (
                      pushd ssGUI
                      git rev-parse HEAD > .commit-id
                      popd
                      cp ./ssGUI/.commit-id ./.commit-id
                    )
            
    - BuildStage:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: true
        approval:
          type: success
          allow_only_on_success: true
        jobs:
          LinuxBuildJob_NoMock:
            artifacts:
            - build:
                source: ssGUI/Build/*
                destination: ssGUI_LinucBuild_NoMock
            tasks:
            - fetch: &Fetch_ssGUI
                is_file: false
                run_if: passed
                source: ssGUI
                destination: ''
                pipeline: ssGUI_Pipeline
                stage: CheckoutStage
                job: CheckoutJob
                artifact_origin: gocd
            
            # Setup for status notification
            - plugin: &SetupStatus
                <<: *ShellRun
                run_if: passed
                options:
                  shtype: bash
                  script: |+
                    set -e
                    source ~/helpers.sh
                    (
                      mkdir ./ssGUI/Build
                      cp ./ssGUI/.commit-id ./.commit-id
                      cp ./ssGUI/.commit-id ./ssGUI/Build/.commit-id
                    )
            
            - plugin: &InitEmbed2C
                <<: *ShellRun
                run_if: passed
                options:
                  shtype: bash
                  script: |+
                    set -e
                    source ~/helpers.sh
                    (
                      pushd ./ssGUI/Build
                      cmake ..
                      popd
                    ) 2>&1 | tee -a ./ci.log
            
            - plugin: &BuildEmbed2C
                <<: *ShellRun
                run_if: passed
                options:
                  shtype: bash
                  script: |+
                    set -e
                    source ~/helpers.sh
                    (
                      pushd ./ssGUI/Build
                      cmake --build . --target Embed2C
                      popd
                    ) 2>&1 | tee -a ./ci.log
            
            - plugin:
                <<: *ShellRun
                run_if: passed
                options:
                  shtype: bash
                  script: |+
                    set -e
                    source ~/helpers.sh
                    (
                      pushd ./ssGUI/Build
                      cmake .. -DssGUI_BUILD_TESTS=true
                      popd
                    ) 2>&1 | tee -a ./ci.log
            
            - plugin: &Build_ssGUI
                <<: *ShellRun
                run_if: passed
                options:
                  shtype: bash
                  script: |+
                    set -e
                    source ~/helpers.sh
                    (
                      pushd ./ssGUI/Build
                      cmake .. --build . -j 16
                      popd
                    ) 2>&1 | tee -a ./ci.log

            - plugin: 
                <<: *NotifyPipelineStatus
                run_if: failed
            
          LinuxBuildJob_MockWithBackend:
            artifacts:
            - build:
                source: ssGUI/Build/*
                destination: ssGUI_LinucBuild_MockWithBackend
            tasks:
            - fetch: *Fetch_ssGUI
            - plugin: *SetupStatus
            - plugin: *InitEmbed2C
            - plugin: *BuildEmbed2C
            
            - plugin:
                <<: *ShellRun
                run_if: passed
                options:
                  shtype: bash
                  script: |+
                    set -e
                    source ~/helpers.sh
                    (
                      pushd ./ssGUI/Build
                      cmake .. -DssGUI_BUILD_TESTS=true -DssGUI_MOCK_BACKEND_MODE=\"Mock With Native Backend\"
                      popd
                    ) 2>&1 | tee -a ./ci.log
            
            - plugin: *Build_ssGUI
            
            - plugin:
                <<: *NotifyPipelineStatus
                run_if: failed
          
          
          LinuxBuildJob_Mock:
            artifacts:
            - build:
                source: ssGUI/Build/*
                destination: ssGUI_LinucBuild_Mock
            tasks:
            - fetch: *Fetch_ssGUI
            - plugin: *SetupStatus
            - plugin: *InitEmbed2C
            - plugin: *BuildEmbed2C
            
            - plugin:
                <<: *ShellRun
                run_if: passed
                options:
                  shtype: bash
                  script: |+
                    set -e
                    source ~/helpers.sh
                    (
                      pushd ./ssGUI/Build
                      cmake .. -DssGUI_BUILD_TESTS=true \
                      -DssGUI_MOCK_BACKEND_MODE=Mock \
                      -DssGUI_FONT_BACKEND=Mock \
                      -DssGUI_IMAGE_BACKEND=Mock \
                      -DssGUI_MAIN_BACKEND=Mock
                      
                      popd
                    ) 2>&1 | tee -a ./ci.log
            
            - plugin: *Build_ssGUI
            
            - plugin:
                <<: *NotifyPipelineStatus
                run_if: failed
    
    - TestStage:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: true
        approval:
          type: success
          allow_only_on_success: true
        jobs:
          LinuxTest_Mock:
            tasks:
            - fetch:
                is_file: false
                run_if: passed
                source: ssGUI_LinucBuild_Mock
                destination: ''
                pipeline: ssGUI_Pipeline
                stage: BuildStage
                job: LinuxBuildJob_Mock
                artifact_origin: gocd
            
            - plugin: &SetupStatus
                <<: *ShellRun
                run_if: passed
                options:
                  shtype: bash
                  script: |+
                    set -e
                    source ~/helpers.sh
                    (
                      cp ./ssGUI_LinucBuild_Mock/.commit-id ./.commit-id
                    )
            
            - plugin:
                <<: *ShellRun
                run_if: passed
                options:
                  shtype: bash
                  script: |+
                    set -e
                    source ~/helpers.sh
                    (
                      chmod +x ./ssGUI_LinucBuild_Mock/Src/Tests/AutoTests/RunAllTests.sh
                    ) 2>&1 | tee -a ./ci.log
            
            - plugin:
                <<: *ShellRun
                run_if: passed
                options:
                  shtype: bash
                  script: |+
                    set -e
                    source ~/helpers.sh
                    (
                      pushd ./ssGUI_LinucBuild_Mock/Src/Tests/AutoTests
                      ./RunAllTests.sh
                      popd
                    ) 2>&1 | tee -a ./ci.log

            - plugin:
                <<: *NotifyPipelineStatus
                run_if: failed
            
            - plugin:
                <<: *ShellRun
                run_if: passed
                options:
                  shtype: bash
                  script: |+
                    set -e
                    source ~/helpers.sh
                    if [ ! -e ./ci.log ]; then
                      touch ./ci.log
                    fi

                    if [ ! -z "$PR_ID" ]; then
                      ~/Trigger_GH_PR_StatusPipeline.sh \
                      --status "passed" \
                      --commit "$(cat ./.commit-id)" \
                      --repo "ssGUI" \
                      --pr "$PR_ID" \
                      --stage "$GO_STAGE_NAME" \
                      --message "$(cat ./ci.log)"
                    fi
