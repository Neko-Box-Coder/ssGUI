NDSummary.OnToolTipsLoaded("CClass:ssGUI.StandardWindow",{1292:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1292\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\"><span class=\"Qualifier\">ssGUI::</span>&#8203;StandardWindow</div></div></div><div class=\"TTSummary\">A standard window that contains window icon, title and close button. With addtional visual and funcational extensions added.</div></div>",1294:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1294\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">static const</span> std::<span class=\"SHKeyword\">string</span> ListenerKey</div></div></div>",1296:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1296\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetWindowTitleObject(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ssGUI::</td><td class=\"PType\">Text*&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the window title text object.&nbsp; You can use &lt;GUIObject::SetUserCreated&gt; and &lt;GUIObject::SetHeapAllocated&gt; to allow Standard Window to manage the lifetime of the text object instead.</div></div>",1297:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1297\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual</span> ssGUI::Text* GetWindowTitleObject() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Returns the pointer to the window title text object. Nullptr if it doesn\'t exist</div></div>",1298:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1298\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetAutoFontSize(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">autoSize</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Set is the font size controlled automatically by the titlebar height</div></div>",1299:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1299\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual bool</span> IsAutoFontSize() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Returns is the font size controlled automatically by the titlebar height</div></div>",1300:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1300\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetAutoFontSizeMultiplier(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">multiplier</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Set the font size multiplier to have a finer adjustment over it</div></div>",1301:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1301\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual float</span> GetAutoFontSizeMultiplier() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Gets the font size multiplier to have a finer adjustment over it</div></div>",1302:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1302\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetWindowIconGUIObject(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ssGUI::</td><td class=\"PType\">Image*&nbsp;</td><td class=\"PName last\">image</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the window icon image object.&nbsp; You can use &lt;GUIObject::SetUserCreated&gt; and &lt;GUIObject::SetHeapAllocated&gt; to allow Standard Window to manage the lifetime of the text object instead.</div></div>",1303:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1303\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual</span> ssGUI::Image* GetWindowIconGUIObject() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Returns the pointer to the window icon image object. Nullptr if it doesn\'t exist</div></div>",1304:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1304\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetCloseButtonObject(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ssGUI::</td><td class=\"PType\">Button*&nbsp;</td><td class=\"PName last\">button</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the close button object.&nbsp; You can use &lt;GUIObject::SetUserCreated&gt; and &lt;GUIObject::SetHeapAllocated&gt; to allow Standard Window to manage the lifetime of the text object instead.</div></div>",1305:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1305\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual</span> ssGUI::Button* GetCloseButtonObject() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Returns the pointer to the close button object. Nullptr if it doesn\'t exist</div></div>",1306:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1306\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetHorizontalPadding(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">padding</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the horizontal padding for the icon, title and close button objects, in pixels</div></div>",1307:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1307\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual int</span> GetHorizontalPadding() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Returns the horizontal padding for the icon, title and close button objects, in pixels</div></div>",1308:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1308\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetVerticalPadding(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">padding</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the vertical padding for the icon, title and close button objects, in pixels</div></div>",1309:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1309\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual int</span> GetVerticalPadding() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Returns the vertical padding for the icon, title and close button objects, in pixels</div></div>",1310:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1310\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetAdaptiveTitleColor(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">adaptive</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets if the title text color &quot;adapts&quot; to the titlebar color dynamically.&nbsp; You need to call this function after setting the title text color to update the color difference stored here.</div></div>",1311:"<div class=\"NDToolTip TFunction LC\"><div class=\"TTSummary\">Returns if the title text color &quot;adapts&quot; to the titlebar color dynamically</div></div>",1312:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1312\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetAdaptiveTitleContrast(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">contrast</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets if the title text color is opposite to the titlebar color</div></div>",1313:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1313\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual bool</span> IsAdaptiveTitleContrast() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Returns if the title text color is opposite to the titlebar color</div></div>",1314:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1314\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetAdaptiveTitleColorDifference(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">glm::</td><td class=\"PType\">ivec4&nbsp;</td><td class=\"PName last\">difference</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the title text color difference to titlebar color manually (TitleTextColor-TitlebarColor) This is normally set automatically when you call SetAdaptiveTitleColor</div></div>",1315:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1315\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual</span> glm::ivec4 GetAdaptiveTitleColorDifference() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Gets the title text color difference to titlebar color (TitleTextColor-TitlebarColor)</div></div>",1316:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1316\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetTitlebarColor(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">glm::</td><td class=\"PType\">u8vec4&nbsp;</td><td class=\"PName last\">color</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">override</span></td></tr></table></div></div><div class=\"TTSummary\">See Window::SetTitlebarColor</div></div>",1317:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1317\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetTitlebar(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">set</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">override</span></td></tr></table></div></div><div class=\"TTSummary\">See Window::SetTitlebar</div></div>",1318:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1318\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetClosable(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">closable</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">override</span></td></tr></table></div></div><div class=\"TTSummary\">See Window::SetClosable</div></div>",1319:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1319\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual</span> ssGUI::Enums::GUIObjectType GetType() <span class=\"SHKeyword\">const override</span></div></div><div class=\"TTSummary\">See GUIObject::GetType</div></div>",1320:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1320\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> StandardWindow* Clone(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">cloneChildren</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">override</span></td></tr></table></div></div><div class=\"TTSummary\">See Window::Clone</div></div>",1321:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1321\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual void</span> InitiateDefaultResources() <span class=\"SHKeyword\">override</span></div></div><div class=\"TTSummary\">See GUIObject::InitiateDefaultResources</div></div>",1322:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1322\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual void</span> CleanUpDefaultResources() <span class=\"SHKeyword\">override</span></div></div><div class=\"TTSummary\">See GUIObject::CleanUpDefaultResources</div></div>"});