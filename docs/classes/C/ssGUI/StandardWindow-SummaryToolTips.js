NDSummary.OnToolTipsLoaded("CClass:ssGUI.StandardWindow",{630:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype630\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\"><span class=\"Qualifier\">ssGUI::</span>&#8203;StandardWindow</div></div></div><div class=\"TTSummary\">A standard window that contains window icon, title and close button. With addtional visual and funcational extensions added.</div></div>",904:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype904\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">static const</span> std::<span class=\"SHKeyword\">string</span> ListenerKey</div></div></div>",906:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype906\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetWindowTitleObject(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ssGUI::</td><td class=\"PType\">Text*&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the window title text object.&nbsp; You can use &lt;GUIObject::SetUserCreated&gt; and &lt;GUIObject::SetHeapAllocated&gt; to allow Standard Window to manage the lifetime of the text object instead.</div></div>",907:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype907\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual</span> ssGUI::Text* GetWindowTitleObject() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Returns the pointer to the window title text object. Nullptr if it doesn\'t exist</div></div>",908:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype908\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetAutoFontSize(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">autoSize</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Set is the font size controlled automatically by the titlebar height</div></div>",909:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype909\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual bool</span> IsAutoFontSize() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Returns is the font size controlled automatically by the titlebar height</div></div>",910:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype910\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetAutoFontSizeMultiplier(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">multiplier</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Set the font size multiplier to have a finer adjustment over it</div></div>",911:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype911\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual float</span> GetAutoFontSizeMultiplier() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Gets the font size multiplier to have a finer adjustment over it</div></div>",912:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype912\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetWindowIconObject(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ssGUI::</td><td class=\"PType\">Image*&nbsp;</td><td class=\"PName last\">image</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the window icon image object.&nbsp; You can use &lt;GUIObject::SetUserCreated&gt; and &lt;GUIObject::SetHeapAllocated&gt; to allow Standard Window to manage the lifetime of the text object instead.</div></div>",913:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype913\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual</span> ssGUI::Image* GetWindowIconObject() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Returns the pointer to the window icon image object. Nullptr if it doesn\'t exist</div></div>",914:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype914\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetCloseButtonObject(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ssGUI::</td><td class=\"PType\">Button*&nbsp;</td><td class=\"PName last\">button</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the close button object.&nbsp; You can use &lt;GUIObject::SetUserCreated&gt; and &lt;GUIObject::SetHeapAllocated&gt; to allow Standard Window to manage the lifetime of the text object instead.</div></div>",915:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype915\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual</span> ssGUI::Button* GetCloseButtonObject() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Returns the pointer to the close button object. Nullptr if it doesn\'t exist</div></div>",916:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype916\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetHorizontalPadding(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">padding</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the horizontal padding for the icon, title and close button objects, in pixels</div></div>",917:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype917\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual int</span> GetHorizontalPadding() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Returns the horizontal padding for the icon, title and close button objects, in pixels</div></div>",918:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype918\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetVerticalPadding(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">padding</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the vertical padding for the icon, title and close button objects, in pixels</div></div>",919:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype919\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual int</span> GetVerticalPadding() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Returns the vertical padding for the icon, title and close button objects, in pixels</div></div>",920:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype920\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetAdaptiveTitleColor(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">adaptive</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets if the title text color &quot;adapts&quot; to the titlebar color dynamically.&nbsp; You need to call this function after setting the title text color to update the color difference stored here.</div></div>",921:"<div class=\"NDToolTip TFunction LC\"><div class=\"TTSummary\">Returns if the title text color &quot;adapts&quot; to the titlebar color dynamically</div></div>",922:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype922\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetAdaptiveTitleContrast(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">contrast</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets if the title text color is opposite to the titlebar color</div></div>",923:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype923\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual bool</span> IsAdaptiveTitleContrast() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Returns if the title text color is opposite to the titlebar color</div></div>",924:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype924\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetAdaptiveTitleColorDifference(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">glm::</td><td class=\"PType\">ivec4&nbsp;</td><td class=\"PName last\">difference</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the title text color difference to titlebar color manually (TitleTextColor-TitlebarColor) This is normally set automatically when you call SetAdaptiveTitleColor</div></div>",925:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype925\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual</span> glm::ivec4 GetAdaptiveTitleColorDifference() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Gets the title text color difference to titlebar color (TitleTextColor-TitlebarColor)</div></div>",926:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype926\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetTitlebarColor(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">glm::</td><td class=\"PType\">u8vec4&nbsp;</td><td class=\"PName last\">color</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">override</span></td></tr></table></div></div><div class=\"TTSummary\">See Window::SetTitlebarColor</div></div>",927:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype927\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetTitlebar(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">set</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">override</span></td></tr></table></div></div><div class=\"TTSummary\">See Window::SetTitlebar</div></div>",928:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype928\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetClosable(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">closable</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">override</span></td></tr></table></div></div><div class=\"TTSummary\">See Window::SetClosable</div></div>",929:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype929\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual</span> ssGUI::Enums::GUIObjectType GetType() <span class=\"SHKeyword\">const override</span></div></div><div class=\"TTSummary\">See GUIObject::GetType</div></div>",930:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype930\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> StandardWindow* Clone(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">cloneChildren</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">override</span></td></tr></table></div></div><div class=\"TTSummary\">See Window::Clone</div></div>"});