NDSummary.OnToolTipsLoaded("File:◀️_ssGUI_API_▶️/GUIObjectClasses/CompositeClasses/Slider.hpp",{1391:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1391\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">namespace</span> </div><div class=\"CPName\">ssGUI</div></div></div></div>",1392:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1392\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\"><span class=\"Qualifier\">ssGUI::</span>&#8203;Slider</div></div></div><div class=\"TTSummary\">This class represents a slider GUI widget. A slider object can be either horizontal or vertical, and can also start from either end of the slider using the SetReverse function.&nbsp; This can also be used as a status bar using the fill color functions provided and unassign the knob object.</div></div>",1394:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1394\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">static const</span> std::<span class=\"SHKeyword\">string</span> ListenerKey</div></div></div>",1396:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1396\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetReverse(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">reverse</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets if the slider value is starting from the opposite side.&nbsp; If true, it will start from right to left or from top to bottom if vertical is true.&nbsp; Vice versa if false.</div></div>",1397:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1397\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual bool</span> IsReverse() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">If true, it will start from right to left or from top to bottom if vertical is true.&nbsp; Vice versa if false.</div></div>",1398:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1398\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetFillColor(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">glm::</td><td class=\"PType\">u8vec4&nbsp;</td><td class=\"PName last\">fillColor</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the filling color between starting point to the knob object.</div></div>",1399:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1399\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual</span> glm::u8vec4 GetFillColor() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Gets the filling color between starting point to the knob object.</div></div>",1400:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1400\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetKnobObject(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ssGUI::</td><td class=\"PType\">GUIObject*&nbsp;</td><td class=\"PName last\">knob</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets knob object. This will automatically delete the previous assigned knob object.&nbsp; Setting nullptr is possible for not using any knob object, useful for status bar or something like that.</div></div>",1401:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1401\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual</span> ssGUI::GUIObject* GetKnobObject() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Gets knob object. Nullptr if no knob object is assigned.</div></div>",1402:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1402\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetKnobSize(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">knobSize,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">updateKnobObject</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Helper function for setting the diameter of the knob.&nbsp; Equivalent to SetSize(glm::vec2(knobSize, knobSize)) for the knob object and also store locally and used as a substitude value if there\'s no knob object assigned.</div></div>",1403:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1403\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual float</span> GetKnobSize() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Helper function for getting the diameter of the knob.&nbsp; Equivalent to GetSize() for the knob object.&nbsp; This can return local knob size if no knob object is assigned.</div></div>",1404:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1404\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetEndPadding(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">padding</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the number of pixels padding for both ends of the slider</div></div>",1405:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1405\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual float</span> GetEndPadding() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Gets the number of pixels padding for both ends of the slider</div></div>",1406:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1406\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetSliderValue(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">sliderValue</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the value of the slider, ranging from 0 to 1.</div></div>",1407:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1407\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual float</span> GetSliderValue() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Gets the value of the slider, ranging from 0 to 1.</div></div>",1408:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1408\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetVertical(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">vertical,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">swapWidthHeight</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets if the slider is operating vertically or not.&nbsp; There\'s an extra option of flipping the width height field of the slider.</div></div>",1409:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1409\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual bool</span> IsVertical() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Returns if the slider is operating vertically or not.</div></div>",1410:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1410\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetSnapInterval(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">interval</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the interval of snapping. 0 to disable.&nbsp; It is possible for GetSliderValue to have a slight offset depending on the interval, using rounding function is advised when using the value of it.</div></div>",1411:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1411\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual float</span> GetSnapInterval() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Gets the interval of snapping. 0 to disable.&nbsp; It is possible for GetSliderValue to have a slight offset depending on the interval, using rounding function is advised when using the value of it.</div></div>",1412:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1412\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetScrollInterval(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">interval</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the interval for each scroll input.&nbsp; This only limits to move in an interval so this is different from snapping.</div></div>",1413:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1413\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual float</span> GetScrollInterval() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Gets the interval for each scroll input.&nbsp; This only limits to move in an interval so this is different from snapping.</div></div>",1414:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1414\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetKeyInputMoveInterval(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">interval</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Sets the interval for each arrow or wasd key input.&nbsp; This only limits to move in an interval so this is different from snapping.</div></div>",1415:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1415\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual float</span> GetKeyInputMoveInterval() <span class=\"SHKeyword\">const</span></div></div><div class=\"TTSummary\">Sets the interval for each arrow or wasd key input.&nbsp; This only limits to move in an interval so this is different from snapping.</div></div>",1416:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1416\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual</span> ssGUI::Enums::GUIObjectType GetType() <span class=\"SHKeyword\">const override</span></div></div><div class=\"TTSummary\">See Widget::GetType</div></div>",1417:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1417\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> Slider* Clone(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">cloneChildren</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">override</span></td></tr></table></div></div><div class=\"TTSummary\">See Widget::Clone</div></div>"});